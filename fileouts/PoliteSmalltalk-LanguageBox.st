CUCompositeParser subclass: #PSGrammar	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PoliteSmalltalk-LanguageBox'!!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 16:36'!identifier	^ word, (#space asParser star, word) star! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 16:32'!identifierToken	^ identifier smalltalkToken! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 16:36'!start	unaryMessage / unaryMethod! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 14:35'!unary	^ word trim plus, $: asParser not! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 15:34'!unaryMessage	^ unaryToken ==> [:node | "self halt."		Array 			with: (Array with: node) 			with: Array new ]! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 16:32'!unaryMethod	^ identifierToken ==> [ :node | 		Array 			with: (Array with: node)			with: Array new ]! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 14:34'!unaryToken	^ unary smalltalkToken! !!PSGrammar methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 15:36'!word	^ (#letter asParser, #word asParser star) flatten! !PSGrammar subclass: #PSCompiler	instanceVariableNames: ''	classVariableNames: 'IdentifierToken'	poolDictionaries: ''	category: 'PoliteSmalltalk-LanguageBox'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PSCompiler class	instanceVariableNames: ''!!PSCompiler class methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 11:30'!concern	^ #compile:! !PSGrammar subclass: #PSHighlighter	instanceVariableNames: ''	classVariableNames: 'IdentifierToken UnaryToken'	poolDictionaries: ''	category: 'PoliteSmalltalk-LanguageBox'!!PSHighlighter methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 16:34'!identifierToken	super identifierToken ==> [:token |" self halt. "token -> IdentifierToken ]! !!PSHighlighter methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 15:53'!unaryToken	super unaryToken ==> [:token |" self halt. "token -> UnaryToken ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PSHighlighter class	instanceVariableNames: ''!!PSHighlighter class methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 11:26'!concern	^ #highlight:! !!PSHighlighter class methodsFor: 'as yet unclassified' stamp: 'JK 4/11/2013 16:34'!initialize	UnaryToken := Color magenta.	IdentifierToken := Color magenta muchDarker.! !LBLanguageBox subclass: #PSLanguageBox	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PoliteSmalltalk-LanguageBox'!!PSLanguageBox methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 15:36'!change2: aSmalltalkGrammar		^ LBChange new		fragment: (self psGrammarFor: aSmalltalkGrammar);		before: (aSmalltalkGrammar productionAt: #unaryMessage)! !!PSLanguageBox methodsFor: 'as yet unclassified' stamp: 'Mirc 4/18/2013 11:42'!change: aSmalltalkGrammar		| unaryMessageChange identifierChange |		unaryMessageChange := LBChange new		fragment: ((self psGrammarFor: aSmalltalkGrammar) productionAt: #unaryMessage);		before: (aSmalltalkGrammar productionAt: #unaryMessage).			identifierChange := LBChange new		fragment: ((self psGrammarFor: aSmalltalkGrammar) productionAt: #unaryMethod);		before: (aSmalltalkGrammar productionAt: #unaryMethod).		^ unaryMessageChange, identifierChange.! !!PSLanguageBox methodsFor: 'as yet unclassified' stamp: 'Mirc 4/18/2013 11:33'!compile: aCollection	"A hook method that that transforms a collection of token to the AST."		^ aCollection! !!PSLanguageBox methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 10:12'!name	^ 'Polite Smalltalk'! !!PSLanguageBox methodsFor: 'as yet unclassified' stamp: 'JK 4/10/2013 11:49'!psGrammarFor: aSmalltalkGrammar	| grammarClass grammar |	grammarClass := PSGrammar allSubclasses		detect: [ :each | each concern = aSmalltalkGrammar class concern ]		ifNone: [ self error: 'Unsupported language concern: ' , aSmalltalkGrammar class concern ].	grammar := grammarClass new.	^ grammar! !PSHighlighter initialize!