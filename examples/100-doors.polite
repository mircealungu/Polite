" Preparing the language for the program
--------------------------------------------------------" 
open
	^'O'
	
closed
	^'' 
	
the opposite of: status
	status = closed, if true: [^open].
	^closed
	
change the status of door: i in: collection
	| current status |
	current status := collection, at: i. 
	collection, at: i put: (the opposite of: current status).

an:  collection  with cardinality: count
	^collection, new: count

set each element of: collection to: object
	1, to: (collection, size) do: [:i|
		collection, at: i put: object.
		].
	
integers from: a to: b
	^a, to: b
	
for all: elements do: smtg
	elements, do: smtg
	
with multiples of: a up to: b do: c
	a, to: b by: a do: c
	

" The main program 
--------------------------------------------------------" 
| doors, total, rounds  |
total := 100.
doors := an: Array with cardinality: total. 
set each element of: doors to: closed.

rounds := integers from: 1 to: total. 

for all: rounds do: [:round| 
	with multiples of: round up to: total do: [:i |
		change the status of door: i in: doors.
		].
].

doors
